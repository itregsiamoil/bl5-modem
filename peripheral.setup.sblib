// Definitions
//******************************************************************************
#define DeviceName                    	"SIAM MODEM"
dim BLE_TX_POWER:BLE_TX_POWER=			6	// Possible values are 8,6,4,2,0,-4,-8,-12,-16,-20 dBm
#define BLE_1M_PHY                      1
#define BLE_2M_PHY                      2
#define BLE_CODED_PHY                   4
#define ADV_CONN						0
#define ADV_DIRECT_CONN					1
#define ADV_EXT_CONN					6
#define ADV_EXT_DIRECT_CONN				7
#define ADV_TYPE						ADV_CONN
dim BLE_PHY:BLE_PHY=					BLE_1M_PHY
#define U_BUF							2048
#define U_SPEED							57600
#define MinConnInterval					7500
#define MaxConnInterval					20000
#define EncryptConn						2		//2-encr, 1-open
#define AddAppearanceToAdv				0		//0/1
#define BleAppearance					3200	//3200-весы, 520-тэг, 128-компьютер, 64-телефонб 384-удаленное кправление, ble_types.h in SDK
#define DevNameLength					15
#define AdvInterval						700
#define nAttributeLength				20
#define USE_STRINT_IN_EVENTS_KEY_ID		213		// CFG ID 213
#define ENABLE_HIGH_BANDWIDTH_KEY_ID	214		// CFG ID 214
#define USE_STRING_IN_EVENTS			1		// 0: use EVATTRNOTIFY, 1: use EVATTRNOTIFYEX (See user manual)
#define BLE_ENABLE_HIGH_BANDWIDTH		0		// 0: Normal Bandwidth (default), 1: High Bandwidth					
//#define BASEUUID						0x6340
//#define RXUUID						0x6341
//#define TXUUID						0x6342
#define BASEUUID 						"\56\9a\11\01\b8\7f\49\0c\92\cb\11\ba\5e\a5\16\7c"  //VSP base UUID
#define RXUUID   						"\56\9a\20\01\b8\7f\49\0c\92\cb\11\ba\5e\a5\16\7c"  //Receive VSP UUID
#define TXUUID   						"\56\9a\20\00\b8\7f\49\0c\92\cb\11\ba\5e\a5\16\7c"  //Transmit VSP UUID
#define Sep								"*"	//commands separator
#define GAPDataType1					0x27	//bluetooth.com/specifications/assigned-numbers/generic-access-profile/
dim LESupFutr$:LESupFutr$=				"2018"	//(v6,pB,4.6 bt core specification)
#define GAPDataType2					0x24
dim http$:http$=						"16"
dim URI$:URI$=							"//siamoil.ru"
dim tag$:tag$=							"44"
dim Company$:Company$=					"ТНПВО СИАМ"
dim Addr$:Addr$=""
#set $cmpif,0x00 //debug 00-off, FF-on

dim CmdNum
dim debsw:debsw=0
dim CmndModeStr$:CmndModeStr$="letmeout"
dim DataModeStr$:DataModeStr$="data"

#define NumCmnds			8
dim CmndsTable$[NumCmnds]
#define ready				0
#define nameset				1
#define uartset				2
#define physet				3
#define drop				4
#define power				5
#define debug				6
#define resetfw				7
CmndsTable$[ready]="ready"
CmndsTable$[nameset]="nameset"
CmndsTable$[uartset]="uartset"
CmndsTable$[physet]="physet"
CmndsTable$[power]="power"
CmndsTable$[drop]="drop"
CmndsTable$[debug]="debug"
CmndsTable$[resetfw]="resetfw"

// Global Variable Declarations
//******************************************************************************
dim rc,temp,temp$,send$
dim BaseUUID						// Base UUID for the VSP service which other UUIDs will be siblings of
dim svcID							// VSP Service ID
dim TXchar							// TX characteristic
dim RXchar							// RX characteristic
dim ConnectionID:ConnectionID = 0	// Holds the connection ID of the VSP client (if one is connected)
dim UARTBlocked:UARTBlocked = 0		// When set to 1 will not read data from the UART
dim BufferState:BufferState = 0		// Status flag show availible to transmit data
#define CmndMode	1
#define DataMode	2
dim Mode:Mode=CmndMode
dim UartData$
dim DevName$ : DevName$ = DeviceName

//BLE EVENT MSG IDs
#define BLE_EVBLEMSGID_CONNECT                         	 0 // nCtx = connection handle
#define BLE_EVBLEMSGID_DISCONNECT                      	 1 // nCtx = connection handle
#define BLE_EVBLEMSGID_IMMEDIATE_ALERT_SERVICE_ALERT   	 2 // nCtx = alert level
#define BLE_EVBLEMSGID_LINKLOSS_SERVICE_ALERT          	 3 // nCtx = alert level
#define BLE_EVBLEMSGID_SERVICE_ERROR                   	 4 // nCtx = resultcode
#define BLE_EVBLEMSGID_HTS_INDICATION_STATE            	 5 // nCtx = new indication state 0=off, 1=on
#define BLE_EVBLEMSGID_HTS_INDICATION_CNF              	 6 // nCtx = not used
#define BLE_EVBLEMSGID_BPS_INDICATION_STATE            	 7 // nCtx = new indication state 0=off, 1=on
#define BLE_EVBLEMSGID_BPS_INDICATION_CNF              	 8 // nCtx = not used
#define BLE_EVBLEMSGID_DISPLAY_PASSKEY                 	 9 // nCtx = passcode to display
#define BLE_EVBLEMSGID_NEW_BOND                        	10 // nCtx = connection handle
#define BLE_EVBLEMSGID_AUTH_KEY_REQUEST                	11 // nCtx = 1 for passkey, 2 for 16 byte OOB data
#define BLE_EVBLEMSGID_HRS_NOTIFICATION_STATE          	12 // nCtx = new notification state 0=off, 1=on
#define BLE_EVBLEMSGID_CONN_PARMS_UPDATE        		14 // nCtx = connection handle
#define BLE_EVBLEMSGID_CONN_PARMS_UPDATE_FAIL   		15 // nCtx = connection handle
#define BLE_EVBLEMSGID_CONN_TO_BONDED_MASTER    		16 // nCtx = connection handle
#define BLE_EVBLEMSGID_UPDATED_BOND             		17 // nCtx = connection handle
#define BLE_EVBLEMSGID_ENCRYPTED                		18 // nCtx = connection handle
#define BLE_EVBLEMSGID_POWER_FAILURE_WARNING    		19 // nCtx = current supply voltage
#define BLE_EVBLEMSGID_UNENCRYPTED              		20 // nCtx = connection handle
#define BLE_EVBLEMSGID_DEVICENAME_WRITE         		21 // nCtx = connection handle

//******************************************************************************
// Definitions
//******************************************************************************
#define BLE_1M_PHY                      	1
#define BLE_2M_PHY                      	2
#define BLE_CODED_PHY                   	4
#define BLE_NORMAL_SCANNING           		0
#define BLE_EXTENDED_SCANNING         		1
#define ENABLE_HIGH_BANDWIDTH_KEY_ID      	214    // CFG ID 214
#define USE_STRINT_IN_EVENTS_KEY_ID         213    // CFG ID 213
#define USE_STRING_IN_EVENTS                1      // 0: use EVATTRNOTIFY, 1: use EVATTRNOTIFYEX (See user manual)
#define TRANSMIT_POWER						8 //-40, -20, -16, -12, -8, -4, 0, 2, 4, 5, 6, 7, and 8 dBm.
#define device_addr_overall					10
#define time_to_scan 						20000 //ms
#define scan_interval						300
#define scan_window							250
#define UART_RX_BUFF						200
#define U_SPEED 							115200
#define U_BUF								2048
#define GATT_BUF							2048
#define minConnInterval						7500
#define maxConnInterval						150000
dim SCAN_TYPE:SCAN_TYPE=					BLE_EXTENDED_SCANNING
dim BLE_PHY:BLE_PHY=						BLE_CODED_PHY
dim HIGH_BANDWIDTH:HIGH_BANDWIDTH=			1// 0: medium bandwidth 1: high bandwidth

// Hardcoded GATT attributes of remote BL654
dim RXHandle:RxHandle = 16//RX handle (MI-18,MO-16,RX-21,TX-23,MOCCCD-24)
dim TXHandle:TXHandle = 19//TX handle
dim TXCCCDHandle:TXCCCDHandle = 20//TX CCCD handle
dim nAttributeLength:nAttributeLength = 20//Default Attribute Data Length on BL654s

//******************************************************************************
// Global Variable Declarations
//******************************************************************************
dim ad_from_table:ad_from_table=0
dim dev_cnt:dev_cnt=0
dim conn_cnt:conn_cnt=0
dim BufferState : BufferState = 0   	//Buffer state
dim BufferFull : BufferFull = 0     	//Buffer full
dim debsw:debsw=0						//переключатель режимов отладки
dim Separator$:Separator$="-"			//разделитель команда-параметр
dim urx$ : urx$ = ""                	//UART read buffer
dim BleBuf$ : BleBuf$ = ""          	//VSP read buffer
dim msg_cnt[device_addr_overall]		//массив количества адвертайзинг сообщений под каждый адрес
dim adv_table$[device_addr_overall]		//массив данных адвертайзинг сообщений под каждый адрес
dim addr_table$[device_addr_overall]	//адреса найденных девайсов в hex
dim data_table$[device_addr_overall]	//массив данных под каждое соединение
dim conn_table[device_addr_overall]		//массив идентификаторов соединений
dim rc,ConnectionID,CurrConnId,PrevConnId,PrevHndl
dim sendcount,kbytes,SendTestFlag
dim TestStr$:TestStr$ = "1234567890qwertyuiop0987654321asdfghjkl;1234567890zxcvbnm,./1234567890qwertyuiop0987654321asdfghjkl;"

//BLE EVENT MSG IDs
#define BLE_EVBLEMSGID_CONNECT                         	 0 // nCtx = connection handle
#define BLE_EVBLEMSGID_DISCONNECT                      	 1 // nCtx = connection handle
#define BLE_EVBLEMSGID_IMMEDIATE_ALERT_SERVICE_ALERT   	 2 // nCtx = alert level
#define BLE_EVBLEMSGID_LINKLOSS_SERVICE_ALERT          	 3 // nCtx = alert level
#define BLE_EVBLEMSGID_SERVICE_ERROR                   	 4 // nCtx = resultcode
#define BLE_EVBLEMSGID_HTS_INDICATION_STATE            	 5 // nCtx = new indication state 0=off, 1=on
#define BLE_EVBLEMSGID_HTS_INDICATION_CNF              	 6 // nCtx = not used
#define BLE_EVBLEMSGID_BPS_INDICATION_STATE            	 7 // nCtx = new indication state 0=off, 1=on
#define BLE_EVBLEMSGID_BPS_INDICATION_CNF              	 8 // nCtx = not used
#define BLE_EVBLEMSGID_DISPLAY_PASSKEY                 	 9 // nCtx = passcode to display
#define BLE_EVBLEMSGID_NEW_BOND                        	10 // nCtx = connection handle
#define BLE_EVBLEMSGID_AUTH_KEY_REQUEST                	11 // nCtx = 1 for passkey, 2 for 16 byte OOB data
#define BLE_EVBLEMSGID_HRS_NOTIFICATION_STATE          	12 // nCtx = new notification state 0=off, 1=on
#define BLE_EVBLEMSGID_CONN_PARMS_UPDATE        		14 // nCtx = connection handle
#define BLE_EVBLEMSGID_CONN_PARMS_UPDATE_FAIL   		15 // nCtx = connection handle
#define BLE_EVBLEMSGID_CONN_TO_BONDED_MASTER    		16 // nCtx = connection handle
#define BLE_EVBLEMSGID_UPDATED_BOND             		17 // nCtx = connection handle
#define BLE_EVBLEMSGID_ENCRYPTED                		18 // nCtx = connection handle
#define BLE_EVBLEMSGID_POWER_FAILURE_WARNING    		19 // nCtx = current supply voltage
#define BLE_EVBLEMSGID_UNENCRYPTED              		20 // nCtx = connection handle
#define BLE_EVBLEMSGID_DEVICENAME_WRITE         		21 // nCtx = connection handle
